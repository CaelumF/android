import com.toggl.buildsrc.Libs

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

kapt {
    correctErrorTypes = true
    useBuildCache = true
}

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode buildConfig.versionCode
        versionName buildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }

    buildTypes {
        adhoc {}
    }
}

dependencies {
    coreLibraryDesugaring Libs.Android.desugarJdkLibs
    api project(':api')
    implementation project(':common')
    implementation project(':common-android')
    implementation project(':database')
    implementation project(':architecture')

    implementation Libs.Kotlin.stdlib
    implementation Libs.Coroutines.core
    implementation Libs.AndroidX.Work.runtime
    implementation Libs.AndroidX.Work.runtimeKtx
    implementation Libs.AndroidX.Hilt.work
    kapt Libs.AndroidX.Hilt.compiler
    implementation Libs.Hilt.hilt
    kapt Libs.Hilt.compiler

    testImplementation Libs.Test.Jupiter.api
    testRuntimeOnly Libs.Test.Jupiter.engine
    testImplementation Libs.Test.Jupiter.params
    testImplementation Libs.Test.kotestMatchers
    testImplementation Libs.slf4j
    testImplementation Libs.Test.mockk
    testImplementation Libs.Test.kotlinTest
    testImplementation Libs.Test.kotlinTestJunit
    testImplementation Libs.Test.kotlinCoroutineTest
}
